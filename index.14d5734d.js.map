{"mappings":"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","sources":["node_modules/@kurkle/color/dist/color.esm.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.js","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.js","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/auto/auto.js","node_modules/chart.js/src/index.ts","src/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import Chart from 'chart.js/auto';\n// import barChart from './chart'\n\nconst storageInput = document.querySelector('#storage');\nconst storage = document.querySelector('#storageValue');\nconst transferInput = document.querySelector('#transfer');\nconst transfer = document.querySelector('#transferValue');\nconst form = document.querySelector('form');\n\nconst popCanvas = document.getElementById('myChart');\n\nconst bunnyRadioButtons = document.querySelectorAll(\n  'input[type=radio][name=\"bunny\"]'\n);\nconst scalewayRadioButtons = document.querySelectorAll(\n  'input[type=radio][name=\"scaleway\"]'\n);\n\n// console.log(bunnyRadioButtons);\n\nconst getFactPrice = (storage, transfer, sValue, tValue) => {\n  return +(storage * sValue + transfer * tValue).toFixed(2);\n};\n\nconst getBackblazePrice = (storage, transfer) => {\n  const backblazePrice = getFactPrice(storage, transfer, 0.005, 0.01);\n  return backblazePrice <= 7 ? 7 : backblazePrice;\n};\n\nconst getBunnyPrice = (storage, transfer) => {\n  let dataStorageDevice = document.querySelector(\n    'input[name=\"bunny\"]:checked'\n  ).value;\n  const storagePrice = dataStorageDevice === 'hdd' ? 0.01 : 0.02;\n  const bunnyPrice = getFactPrice(storage, transfer, storagePrice, 0.01);\n  return bunnyPrice < 10 ? bunnyPrice : 10;\n};\n\nconst getScalewayPrice = (storage, transfer) => {\n  let dataStorageUsers = document.querySelector(\n    'input[name=\"scaleway\"]:checked'\n  ).value;\n  const storagePrice = dataStorageUsers === 'multi' ? 0.06 : 0.03;\n  const scalewayfreeStorage = storage <= 75 ? 0 : storage - 75;\n  const scalewayfreeTransfer = transfer <= 75 ? 0 : transfer - 75;\n  return getFactPrice(\n    scalewayfreeStorage,\n    scalewayfreeTransfer,\n    storagePrice,\n    0.02\n  );\n};\n\nconst getVultrPrice = (storage, transfer) => {\n  const vultrPrice = getFactPrice(storage, transfer, 0.01, 0.01);\n  return vultrPrice <= 5 ? 5 : vultrPrice;\n};\n\nconst calculateCost = (storage, transfer) => {\n  const backblazeCost = getBackblazePrice(storage, transfer);\n  const bunnyCost = getBunnyPrice(storage, transfer);\n  const scalewayCost = getScalewayPrice(storage, transfer);\n  const vultrCost = getVultrPrice(storage, transfer);\n\n  return [backblazeCost, bunnyCost, scalewayCost, vultrCost];\n  // let minPrice = Math.min(...priceRange);\n  // let color = priceRange[0] === minPrice ? 'red' : 'default';\n};\n\nlet providers = {\n  backblaze: 'red',\n  bunny: 'orange',\n  scaleway: 'blueviolet',\n  vultr: 'cornflowerblue',\n};\nconst countAndRenderChart = () => {\n  let priceRange = calculateCost(\n    parseInt(storage.innerText),\n    parseInt(transfer.innerText)\n  );\n  // let labels = ['backblaze', 'bunny', 'scaleway', 'vultr'];\n  // let colors = ['red', 'orange', 'blueviolet', 'cornflowerblue'];\n\n  let minPrice = Math.min(...priceRange);\n  let index = priceRange.indexOf(minPrice);\n  // colors.map();\n  console.log(index);\n  console.log(Object.values(providers));\n  let colors = Object.values(providers).map((item, i) => {\n    console.log(i);\n    return (item = i != index ? 'grey' : item);\n    // return item;\n  });\n  console.log(colors);\n\n  // showBar(res);\n  barChart = new Chart(popCanvas, {\n    type: 'bar',\n    // type: 'horizontalBar',\n    data: {\n      labels: Object.keys(providers),\n      datasets: [\n        {\n          label: 'Price',\n          data: priceRange,\n          backgroundColor: colors,\n        },\n      ],\n    },\n  });\n};\n\nconst handleInput = e => {\n  if (barChart) barChart.destroy();\n  if (e.target.tagName !== 'INPUT') {\n    return;\n  }\n  if (e.target.name === 'storage') {\n    storage.innerText = storageInput.value;\n  } else if (e.target.name === 'transfer') {\n    transfer.innerText = transferInput.value;\n  }\n  countAndRenderChart();\n};\n\n(() => {\n  let barChart = null;\n  countAndRenderChart();\n})();\n// Listeners\n\nform.addEventListener('input', handleInput);\n\nbunnyRadioButtons.forEach(radio =>\n  radio.addEventListener('change', handleInput)\n);\n\nscalewayRadioButtons.forEach(radio =>\n  radio.addEventListener('change', handleInput)\n);\n"],"names":["$f8e092a558195575$export$2077e0241d6afd3c","v","Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$f8e092a558195575$export$837ba5c449269406","l","h","Math","max","min","$f8e092a558195575$export$bcc6e673dfa14d36","$f8e092a558195575$export$ed9bd8dcaeba14f6","$f8e092a558195575$export$dbf961a8d278dbef","$f8e092a558195575$export$aa35ef1f24408ab9","$f8e092a558195575$var$map$1","A","B","C","D","E","F","a","b","c","d","e","f","$f8e092a558195575$var$hex","$f8e092a558195575$var$h1","$f8e092a558195575$var$h2","$f8e092a558195575$var$eq","$f8e092a558195575$export$1b06654353ef9f67","r","g","$f8e092a558195575$var$isShort","$f8e092a558195575$var$alpha","undefined","$f8e092a558195575$var$HUE_RE","$f8e092a558195575$var$hsl2rgbn","s","n","k","$f8e092a558195575$var$hsv2rgbn","$f8e092a558195575$var$hwb2rgbn","w","rgb","i","$f8e092a558195575$export$b5ba70b240f8f7f","$f8e092a558195575$var$hueValue","$f8e092a558195575$var$calln","Array","isArray","map","$f8e092a558195575$export$4c15bd42559b811d","$f8e092a558195575$var$hue","$f8e092a558195575$export$5e91288c399be4f9","str","m","exec","p1","p2","$f8e092a558195575$export$e2710022c70fc9ee","$f8e092a558195575$export$b785a357c84e4a04","$f8e092a558195575$var$map","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","$f8e092a558195575$var$names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","$f8e092a558195575$var$names","$f8e092a558195575$export$b2f06b640faad956","unpacked","keys","tkeys","j","ok","nk","length","replace","parseInt","$f8e092a558195575$var$unpack","transparent","toLowerCase","$f8e092a558195575$var$RGB_RE","$f8e092a558195575$var$to","pow","$f8e092a558195575$var$from","$f8e092a558195575$var$modHSL","ratio","tmp","$f8e092a558195575$var$clone","proto","assign","$f8e092a558195575$var$fromObject","input","$f8e092a558195575$var$functionParse","charAt","$f8e092a558195575$export$91aedb20f296e541","$f8e092a558195575$export$892596cec99bc70e","valid","this","_valid","_rgb","rgbString","hexString","hslString","$f8e092a558195575$export$a197af1c58e6260c","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","$f8e092a558195575$var$interpolate","clone","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","$f8e092a558195575$export$bb628a54ab399bc9","constructor","type","ret","len","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","$f3ddd0be20e1c820$export$91477dc880baac21","overrides","descriptors","getScope","node","root","scope","Defaults","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","local","appliers","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","$f3ddd0be20e1c820$export$4368d992c4eafac0","_scriptable","startsWith","_indexable","_fallback","defaults","duration","easing","loop","to","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","cur","stop","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_request","_running","_update","Date","now","remaining","_charts","running","draw","_active","_total","tick","_lastDate","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","$8ad0206f64f59332$export$a424a0aa8f687495","interpolators","boolean","factor","c0","helpersColor","number","Animation","update","cfg","currentValue","_target","_prop","elapsed","_start","_to","_from","_easing","_fn","wait","promises","_promises","Promise","res","rej","resolved","method","Animations","configure","config","animationOptions","animatedProps","_properties","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getMeta","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_data","_dataCheck","adata","convertObjectDataToArray","isExtensible","base","object","_syncList","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","_type","getOptionScopes","createResolver","_cachedDataOpts","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","_drawStart","_drawCount","resolveDatasetElementOptions","resolveDataElementOptions","$context","dataIndex","raw","createDataContext","_resolveElementOptions","dataElementType","elementType","sharing","enableOptionSharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","_sharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","_objectData","supportsDecimation","computeMinSampleSize","_cache","$bar","visibleMetas","concat","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","$parcel$interopDefault","BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","outerRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","innerRadius","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","static","members","init","formats","diff","startOf","endOf","$8ad0206f64f59332$export$f32766ea09ec8bc4","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","$8ad0206f64f59332$export$a13296960cae0384","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","$8ad0206f64f59332$export$1ecca0613f5e56d2","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","EXPANDO_KEY","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","defaultRoutes","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_userMin","_userMax","_suggestedMin","suggestedMin","_suggestedMax","suggestedMax","metas","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","xLabels","yLabels","getLabelItems","_labelItems","_computeLabelItems","_dataLimitsCached","beforeUpdate","sampleSize","_margins","_labelSizes","_gridLineItems","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_range","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","labelRotation","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","_longestTextCache","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_ticksLength","_borderValue","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_each","addControllers","controllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_typedRegistries","$8ad0206f64f59332$export$4bb7493d241fd8a5","PluginService","notify","hook","_init","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","clearCache","_scopeCache","clear","_resolverCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","initConfig","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","_aspectRatio","_options","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","attached","_doResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_metasets","_destroyDatasetMeta","_sortedMetasets","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_plugins","_minPadding","_updateLayout","_updateDatasets","_lastEvent","_eventHandler","_updateHoverStyles","existingEvents","_listeners","newEvents","_responsiveListeners","unbindEvents","_hiddenIndices","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","resizeDelay","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","version","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_pointsUpdated","_points","_segments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","$8ad0206f64f59332$export$c537fa0d021d010b","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","$8ad0206f64f59332$export$be17f937e9aa7533","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","$8ad0206f64f59332$export$d19ba4d812bed757","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","buildLabels","legendItems","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","legendHitBoxes","lineWidths","totalHeight","row","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","_hoveredItem","sameItem","_added","doughnutMode","$8ad0206f64f59332$export$ed247974535929c7","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","$8ad0206f64f59332$export$f99233281efd08a0","titleBlock","createTitle","WeakMap","$8ad0206f64f59332$export$d5c56664638992a4","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","_cachedAnimations","_tooltipItems","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","labelColors","labelPointStyles","labelTextColors","itemSort","dataPoints","_eventPosition","_size","positionAndSize","backgroundPoint","opacity","caretX","caretY","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","$8ad0206f64f59332$export$28c660c63b792dea","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","added","_addedLabels","_valueRange","_startValue","generateTicks","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","_endValue","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_unit","_getLabelCapacity","determineUnitForFormatting","_majorUnit","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","_offsets","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_getTimestampsForTable","_table","buildLookupTable","_minPos","_tableRange","$8ad0206f64f59332$export$acaa6426d77a227e","$c98a0dc47b75720b$export$2e2bcd8739ae039","$1f0dc3b9307be026$var$storageInput","querySelector","$1f0dc3b9307be026$var$storage","$1f0dc3b9307be026$var$transferInput","$1f0dc3b9307be026$var$transfer","$1f0dc3b9307be026$var$form","$1f0dc3b9307be026$var$popCanvas","$1f0dc3b9307be026$var$bunnyRadioButtons","querySelectorAll","$1f0dc3b9307be026$var$scalewayRadioButtons","$1f0dc3b9307be026$var$getFactPrice","storage1","transfer1","sValue","tValue","toFixed","$1f0dc3b9307be026$var$calculateCost","storage6","transfer6","storage2","transfer2","backblazePrice","$1f0dc3b9307be026$var$getBackblazePrice","storage3","transfer3","dataStorageDevice","bunnyPrice","$1f0dc3b9307be026$var$getBunnyPrice","storage4","transfer4","dataStorageUsers","$1f0dc3b9307be026$var$getScalewayPrice","storage5","transfer5","vultrPrice","$1f0dc3b9307be026$var$getVultrPrice","$1f0dc3b9307be026$var$providers","backblaze","bunny","scaleway","vultr","$1f0dc3b9307be026$var$countAndRenderChart","priceRange","innerText","minPrice","log","barChart","$1f0dc3b9307be026$var$handleInput","tagName","radio"],"version":3,"file":"index.14d5734d.js.map"}